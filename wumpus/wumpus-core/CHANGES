
0.20.0 to 0.21.0:

  * Removed the instances of the Affine transformation. They have
    been replaced with special transformation functions: 
    @rotatePrimitive@, @scalePrimitive@, @translatePrimitive@.
    As Primitives are not in an affine frame until they are lifted 
    to Pictures the affine instances had ill-conceived semantics.

  * Due to changes to accommodate the new non-affine  
    transformations, many of the class obligations have changed 
    on the @unit@ of Pictures, Primitives, Bounding Boxes etc. 
    Generally many class contexts that previously required 
    Fractional and Ord on the unit have changed to Real and 
    Floating.

  * Removed demo/AffineTest04.hs - there is no longer a 
    @rotateAbout@ operation on Primitives as they do not exist 
    in an affine frame until they they are lifted to Pictures.
    Added - Scaled.hs, Rotated.hs, Translated,hs.
 
  * Removed the UndecidableInstances pragma from 
    Core.PictureInternal. It looks like Core.Geometry will always 
    needs UndecidableInstances though.



0.19.0 to 0.20.0:
  
  * Removed the modules:
    (1) Wumpus.Extra.SafeFonts
    (2) Wumpus.Extra.SVGColours@
    (3) Wumpus.Extra.X11Colours 
    - they are now in the package @wumpus-basic@.
  
  * Removed the example FontPic.hs to @wumpus-basic@.
  
  * Renamed some functions in Core.BoundingBox: 
    (1) @trace@ changed to @traceBoundary@, (2) @retrace@ 
    changed to @retraceBoundary@.
   
  * Fixed bug with @picOver@, previously the zorder was wrong 
    and the function was actually working as /picUnder/. 
  
  * Added @capHeight@ to FontSize - get the size of an upper 
    case letter without ascenders of descenders.
  
  * Guide updated regarding the new package @wumpus-basic@.
  

0.18.0 to 0.19.0:
  
  * Added @Transform@ type class to apply a matrix transformation
    directly.
  
  * Changed the ordering of picture drawing in PostScript and SVG
    output so the list gets drawn from tail to head with right 
    folds. This makes the list order of pictures match their 
    zorder.
  
  * Renamed the function @withinBB@ (Core.BoundingBox) to 
    @within@.
  
  * On many type signatures with e.g. Points, I\'ve changed the 
    parameter name on the type constructor from @a@ to @u@.
    This is to indicate that @u@ is some unit - almost always a
    Double. e.g @Point2 a@ becomes @Point2 u@ and all the class
    obligations change lexically as well @Floating a =>@ to 
    @Floating u =>@. Superficially this means a lot of type 
    signatures have diffs but haven\'t really changed. 
  
  * Added function @bezierCircle@ to generate the Bezier curve 
    points for arcs describing a circle.
  
  * Added new demo - MultiPic. The PostScript it generates
    is efficient - no extraneous use of @concat@. 
  
  * Added wumpus_default_font constant.


0.17.0 to 0.18.0:
  
  * Added instances of the affine operation classes (Scale, 
    Rotate ...) for Primitives (path, text label, ellipse).

  * Added some picture composition functions to Core.Picture.
    These are useful for testing where the type class 
    complications of Extra.PictureLanguage are an overhead.  

  * Added iRGB to Core.Colour - create RGB colours with 
    integer components [0..255] - and iHSB, iGrey.

  * Added some test modules for the affine transformations.
    These illustrate a quirk in Wumpus where, under affine 
    transformation, Pictures may generate a larger bounding box 
    than composite primitives.

  * Minor change - ztextlabal changed to use 24pt type rather 
    than 12pt. 

  * Corrected the cabal file to include the correct files for 
    the manual. The Haskell source file @WorldFrame.hs@ was 
    missing with the generated file @WorldFrame.eps@ incorrectly 
    included instead.


0.16.0 to 0.17.0:
  
  * Added Core.WumpusTypes to export opaque versions of
    datatypes from Core.PictureInternal. This should make
    the Haddock documentation more cohesive.
   
  * Moved the Core.PictureLanguage module into the Extra
    namespace (Extra.PictureLanguage). This module may change
    in detail, if not in spirit in the future as I'm not 
    very happy with it. Also this module is somewhat 
    \"higher-level\" than the modules in wumpus-core, so 
    a different home seems fitting. 
   
  * Removed CardinalPoint and boundaryPoint from BoundingBox.
  
  * Argument order of 'textlabel' and 'ztextlabel' changed so
    that Point2 is the last argument.
  
  * PathSegment constructor names changed - this is an internal
    change as the constructors are not exported.
  
  * Primitive type changed - moved Ellipse properties into 
    PrimEllipse type - internal change.
  
  * Removed dependency on \'old-time\'.


0.15.0 to 0.16.0:

  * Additions to Core.Geometry (direction, pvec, vangle, 
    circularModulo).

  * Fixed error with langle due to not accounting for circle 
    quadrants in Core.Geometry.

  * Point2 now derives Ord - so it can be used as a key for
    Data.Map.

  * Added escape-character handling to text output in PostScript.
    This was causing a nasty bug where a drawing would completely
    fail when special chars shown (GhostView gives little hint of 
    what is wrong when such errors are present).
 
  * Changed BoundingBox operation 'corners' to return a 4-tuple
    rather than a list.
  
  * Added centeredAt to PictureLanguage


0.14.0 to 0.15.0:

  * Added Named colours and "safe fonts" from wumpus-extra.
  
  * Added wumpus_core_version to track version number.

0.13.1 to 0.14.0:

  * Added draft user guide. 
  
  * Argument order changed for @ellipse@ and @zellispe@ in
    Wumpus.Core.Picture. 
  
  * Removed dependency on Data.Aviary.
  
  * Removed DList dependency.


0.13.0 to 0.13.1:

  * Wumpus.Core.SVG changed path_s to path_c - \'S\' was the 
    wrongSVG command to match PostScript\'s @curveto@.


0.12.0 to 0.13.0:

  * More Haddock documenting. 

  * @lowerLeftUpperRight@ removed from "Wumpus.Core.BoundingBox".

  * Added range checking and Ord obligation t to the @bbox@ 
    \'smart\' constructor.

  * Numeric instances for "Wumpus.Core.Colour" improved.

  * MatrixMult type class simplified

  * Dash Pattern made a list of on-off pairs rather than just a 
    list 

  * The modules - Wumpus.Core.PictureInternal, Wumpus.Core.PostScript,
    Wumpus.Core.SVG & Wumpus.Core.Utils - are no longer exposed.

  * Various operators in "Wumpus.Core.PictureLanguage" changed.

  * Wumpus.Core.TextEncoding split into an internal and a public 
    module (internal - Wumpus.Core.TextEncodingInternal, public - 
    Wumpus.Core.TextEncoder).
