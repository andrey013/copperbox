{-# OPTIONS -Wall #-}



module Demo01 where


import Graphics.ToyFontMetrics.Datatypes
import Graphics.ToyFontMetrics.Parser
import Graphics.ToyFontMetrics.ParserCombinators

import Control.Applicative


main :: IO ()
main = do 
    filetest "samples/a010013l.afm"
    return ()


demo01 :: CharResult String
demo01 = runParser versionNumber "StartFontMetrics 3.0\n"
demo02 = runParser newline  "\nComment ...\n"
demo03 = runParser (whiteSpace *> char 'z')  "Comment one-two-three\nz"
demo04 = runParser (manyTill anyChar newline) "one-two-three \n" 
demo05 = runParser (lexeme newline) "\n"
demo06 = runParser eof ""
demo07 = runParser eof "FAILURE"

filetest :: FilePath -> IO ()
filetest name = readFile name >>= print . runParser afmFile

demo08 :: IO ()
demo08 = print $ runParser ((,) <$> versionNumber <*> fontName) sample

demo09 :: CharResult String
demo09 = runParser fontName sample2

sample :: String
sample = unlines $ 
  [ "StartFontMetrics 2.0"
  , "Comment Generated by pfaedit"
  , "Comment Creation Date: Thu Dec 26 23:03:13 2002"
  , "FontName URWGothicL-Book"
--  , "FullName URW Gothic L Book"
  ]

sample2 :: String
sample2 = unlines $ 
  [ "FontName URWGothicL-Book"
  , "FullName URW Gothic L Book"
  ]