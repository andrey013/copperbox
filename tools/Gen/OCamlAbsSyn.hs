-- do not edit; automatically generated by UU.AG

module Gen.OCamlAbsSyn where

import Base.PrimitiveTypes

-- Argument ----------------------------------------------------
data Argument = ArgExpr (Expr)
              deriving ( Show)
-- Arguments ---------------------------------------------------
type Arguments = [(Argument)]
-- Constant ----------------------------------------------------
data Constant = FloatLiteral (Float)
              | IntegerLiteral (Int)
              | Nil 
              | StringLiteral (String)
              | Unit 
              | Val_False 
              | Val_True 
              deriving ( Show)
-- Constr ------------------------------------------------------
type Constr = ( (OptIdentifier),(String))
-- ConstrDecl --------------------------------------------------
type ConstrDecl = ( (String),(OptTypeExpr))
-- ConstrDecls -------------------------------------------------
type ConstrDecls = [(ConstrDecl)]
-- Def ---------------------------------------------------------
data Def = MLet (LetBindings)
         | MLetrec (LetBindings)
         deriving ( Show)
-- Defs --------------------------------------------------------
type Defs = [(Def)]
-- Expr --------------------------------------------------------
data Expr = App (Expr) (Arguments)
          | ConstantExpr (Constant)
          | ConstrApp (Constr) (Expr)
          | FieldAccess (Expr) (Field)
          | IfExpr (Expr) (Expr) (OptExpr)
          | Let (LetBindings) (Expr)
          | Letrec (LetBindings) (Expr)
          | ListExpr (Exprs)
          | Match (Expr) (PatternMatching)
          | ParenExpr (Expr)
          | Seq (Expr) (Expr)
          | TupleExpr (Exprs)
          | ValuePathExpr (ValuePath)
          deriving ( Show)
-- Exprs -------------------------------------------------------
type Exprs = [(Expr)]
-- Field -------------------------------------------------------
type Field = ( (OptIdentifier),(String))
-- FieldDecl ---------------------------------------------------
type FieldDecl = ( (String),(TypeExpr))
-- FieldDecls --------------------------------------------------
type FieldDecls = [(FieldDecl)]
-- LetBinding --------------------------------------------------
data LetBinding = PatternBinding (Pattern) (Expr)
                | ValueBinding (String) (Parameters) (OptTypeExpr) (Expr)
                deriving ( Show)
-- LetBindings -------------------------------------------------
type LetBindings = [(LetBinding)]
-- OptExpr -----------------------------------------------------
type OptExpr = (Maybe (Expr))
-- OptIdentifier -----------------------------------------------
type OptIdentifier = ( ((Maybe String)))
-- OptTyEquation -----------------------------------------------
type OptTyEquation = (Maybe (TypeExpr))
-- OptTyRep ----------------------------------------------------
type OptTyRep = (Maybe (TyRep))
-- OptTypeExpr -------------------------------------------------
type OptTypeExpr = (Maybe (TypeExpr))
-- Parameter ---------------------------------------------------
data Parameter = ParamPat (Pattern)
               deriving ( Show)
-- Parameters --------------------------------------------------
type Parameters = [(Parameter)]
-- Pattern -----------------------------------------------------
data Pattern = AnonPat 
             | ConstantPat (Constant)
             | ConstrPat (Constr) (Pattern)
             | ParenPat (Pattern) (OptTypeExpr)
             | TuplePat (Patterns)
             | ValuePat (String)
             deriving ( Show)
-- PatternClause -----------------------------------------------
type PatternClause = ( (Pattern),(OptExpr),(Expr))
-- PatternMatching ---------------------------------------------
type PatternMatching = [(PatternClause)]
-- Patterns ----------------------------------------------------
type Patterns = [(Pattern)]
-- Program -----------------------------------------------------
data Program = Program (Defs)
             deriving ( Show)
-- TyInfo ------------------------------------------------------
type TyInfo = ( (OptTyEquation),(OptTyRep))
-- TyParams ----------------------------------------------------
type TyParams = [(String)]
-- TyRep -------------------------------------------------------
data TyRep = ConstrRep (ConstrDecls)
           | RecordRep (FieldDecls)
           deriving ( Show)
-- TypeDefinition ----------------------------------------------
data TypeDefinition = TypeDefinition (Typedefs)
                    deriving ( Show)
-- TypeExpr ----------------------------------------------------
data TypeExpr = TyExprAnon 
              | TyExprConstr (String)
              | TyExprConstrApp (TypeExpr) (TypeExpr)
              | TyExprTuple (TypeExprs)
              | TyExprVar (String)
              deriving ( Show)
-- TypeExprs ---------------------------------------------------
type TypeExprs = [(TypeExpr)]
-- Typedef -----------------------------------------------------
type Typedef = ( (TyParams),(String),(TyInfo))
-- Typedefs ----------------------------------------------------
type Typedefs = [(Typedef)]
-- ValueName ---------------------------------------------------
data ValueName = IdVal (String)
               | OpVal (String)
               deriving ( Show)
-- ValuePath ---------------------------------------------------
type ValuePath = ( (OptIdentifier),(String))


